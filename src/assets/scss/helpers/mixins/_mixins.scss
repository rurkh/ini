@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin btn($color, $text-color: #fff) {
  background-color: $color;
  border-color: $color;
  color: $text-color;

  &:enabled:not(:focus):hover {
    background-color: darken($color, 10%);
    border-color: darken($color, 10%);
  }

  &:focus {
    outline: 0 none;
    background-color: lighten($color, 10%);
    border-color: lighten($color, 10%);
  }

  &.btn-link {
    background-color: transparent;
    border-color: transparent;
    box-shadow: none;
    color: $color;

    &:enabled:not(:focus):hover {
      background-color: transparent;
      border-color: transparent;
      color: darken($color, 10%);
    }

    &:focus {
      background-color: transparent;
      border-color: transparent;
      color: lighten($accentDarkColor,10%);
    }
  }

  &.btn-outline {
    background-color: transparent;
    color: $color;

    //&:enabled:not(:focus):hover {
    //  background-color: $color;
    //  border-color: $color;
    //  color: $text-color;
    //}
    //
    //&:focus {
    //  background-color: $color;
    //  border-color: $color;
    //  color: $text-color;
    //}

    &:not(:hover) {
      box-shadow: none;
    }

    &:enabled:not(:focus):hover {
      background-color: transparent;
    }
  }
}
